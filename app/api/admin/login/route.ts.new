import { NextRequest, NextResponse } from 'next/server';
import { cookies } from 'next/headers';
import { sign } from 'jsonwebtoken';

export async function POST(req: NextRequest) {
  try {
    // Parse the request body
    const { email, password } = await req.json();
    
    // In development, accept any credentials
    if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test') {
      // Create a simple token (not secure for production)
      const token = 'dev-token';
      
      // Set the cookie
      const cookiesStore = await cookies();
      cookiesStore.set('admin-token', token, {
        httpOnly: true,
        secure: true,
        sameSite: 'strict',
        maxAge: 60 * 60 * 8, // 8 hours
        path: '/',
      });
      
      return NextResponse.json({ success: true });
    }
    
    // In production, validate against environment variables
    const adminEmail = process.env.ADMIN_EMAIL;
    const adminPassword = process.env.ADMIN_PASSWORD;
    const jwtSecret = process.env.JWT_SECRET;
    
    if (!adminEmail || !adminPassword || !jwtSecret) {
      return NextResponse.json(
        { error: 'Server configuration error' },
        { status: 500 }
      );
    }
    
    // Validate credentials
    if (email !== adminEmail || password !== adminPassword) {
      return NextResponse.json(
        { error: 'Invalid email or password' },
        { status: 401 }
      );
    }
    
    // Create a JWT token
    const token = sign(
      { email, role: 'admin' },
      jwtSecret,
      { expiresIn: '8h' }
    );
    
    // Set the cookie
    const cookiesStore = await cookies();
    cookiesStore.set('admin-token', token, {
      httpOnly: true,
      secure: true,
      sameSite: 'strict',
      maxAge: 60 * 60 * 8, // 8 hours
      path: '/',
    });
    
    return NextResponse.json({ success: true });
    
  } catch (error) {
    console.error('Login error:', error);
    return NextResponse.json(
      { error: 'An error occurred during login' },
      { status: 500 }
    );
  }
}
